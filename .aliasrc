# enable color support of ls and also add handy aliases
#alias dir='dir --color=auto'
#alias vdir='vdir --color=auto'
#alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

###################
# ls aliases
###################
if [ "$(uname)" = Darwin ]; then
	alias ls='ls -G'
	alias grep='grep --color=auto'
else
	if [ -x /usr/bin/dircolors -o "$(uname)" = Darwin ]; then
		alias ls='ls --color=auto'
		alias grep='grep --color=auto'
	fi
fi
alias ll='ls -l'
alias la='ls -A'
alias lla='ls -lA'
alias lcf='ls -CF'
alias lm='ls | more'
alias l1='ls -1'

#####
# hg alias
####
alias -g hgs='hg status'

###################
# git alias
###################
alias g="git"
alias gsb="git submodule"
alias gp="git cherry-pick"
alias gc="git checkout"
alias gcb="git checkout -b"
alias gm="git checkout master"
alias gb="git branch"
alias gbd="git branch -d"
alias gbdf="git branch -D"
alias gbm="git branch -m"
alias ga="git add"
alias gco="git commit"
alias gca="git commit -a"
alias gcm="git commit -m"
alias gcam="git commit -am"
alias gf="git fetch"
alias gl="git log"
alias glo='git log --oneline'
alias glst="git log --stat"
alias gg="git g"
alias gd="git diff"
alias gds="cdiff -s"
alias gdc="git diff --cached"
alias gss="git status -s"
alias gssh="git status -s|head"
alias gr="git rebase"
alias sgr-origmaster="echo 'sudo git rebase origin/master'; sudo git rebase origin/master"
alias gri="git rebase -i"
alias gpl="git pull"
alias gpr="git pull --rebase"
alias gfr="git fetch --all && git rebase"
alias gfr-prune="git fetch --all --prune && git rebase"
alias gps="git push"
alias ghubp="git push -u origin master"
alias gst="git stash "
alias gstl="git stash list | cat"
alias gsts="git stash save"
alias gstp="git stash pop"
gstd() {
  echo 'Are you sure you want to # git stash drop ? [y/n]'
  read y_or_n
  [ "$y_or_n" = "y" ] && git stash drop
  #[ "$y_or_n" = "y" ] && git stash drop $@ 未確認なのでgit stash dropの引数指定は未対応
}
alias gstv="git stash show -v"
alias getbranch="git branch | grep \"*\" | awk '{print \$2}'"
alias sgrh="sudo git reset --hard HEAD"
alias sgc="sudo git checkout"
alias sgcm="sudo git commit -m"
alias sgf="sudo git fetch"
alias glsu="git ls-files --others --exclude-standard"
###################
# lxc
###################
alias lxd='sudo lxc-destroy -n '
alias lxs='sudo lxc-start -n '
alias lxstop='sudo lxc-stop -n '
alias lxl='sudo lxc-list'
alias lxcon='sudo lxc-console -n '

###################
# docker
###################
if [ -x "$(which docker)" ]; then
    alias dk="docker"
elif [ -x "$(which docker.io)" ]; then
    alias dk="docker.io"
fi
alias di="dk images"
alias dp="dk ps"
alias dl="dk ps -lq"
alias dinb="dk images | grep nbyst"
# 今うまくできないので dlip をしばらく凍結
# [ -x "`which jq`" ] && \
# 	alias dlip='docker inspect "$(docker ps -lq)' | jq -r ".[0].NetworkSettings.IPAddress" '
di-q() {
	local imagename=$1
	[ -z "$imagename" ] && return 1
	python -c "\
import docker
import sys
try:
    print(filter( lambda i: i['RepoTags'] == [u'$imagename'], docker.Client().images())[0]['Id'])
except Exception, e:
    sys.exit(1)
"
}
###################
# vagrant
###################
alias vag='vagrant'
alias vagb='vagrant box'
alias vags='vagrant status'
alias vagd='vagrant destroy'

#########################
# tmux aliases
#########################
alias ta="tmux ls && tmux attach || echo 'tmux session not found, create new tmux session.'; tmux"
#prefix をC-gに
alias tpg='tmux set-option -ag prefix C-u'
#prefix をC-bに
alias tpb='tmux set-option -ag prefix C-b'

######################
# vim alias
######################
alias tv="sudo vim.tiny -u NONE"
alias v="vim.tiny -u NONE"

###############
# Grep alias
###############
alias grr='grep -IHnr '
alias pag='ps aux | ag'
###############
# other alias 
###############
alias cx='chmod +x'
alias susp="sudo pm-suspend"
alias wh="which"
alias ggl="w3m 'http://google.co.jp/'"
alias wbn="w3m 'http://bing.co.jp/'"
alias w3b="w3m -B"
alias f="find"
alias fjava='find . -name "*.java"'
alias fn="find ./ -name "
alias c="cut -d' ' -f "
alias sq="sudo shutdown -h now"
alias emc="emacs -nw"
alias pst="pstree"

alias acs="sudo apt-cache search"
alias agi="sudo apt-get install -y"
alias s="sudo "
alias tailog="sudo tailf /var/log/messages"

alias datefilename="date +%Y-%m%d-%H%M"
alias thunderbird-address="thunderbird -addressbook"
alias his="history"

alias ipad="ip addr show"

alias ssh-ka='ssh -o ServerAliveInterval=60'
alias showPATH="echo \$PATH | tr ':' '\n'"

##########
# play!
##########
alias p="play"
alias pec="play ec"
alias p-idl='play idealize'
alias pc="play clean"
alias pr="play run"
alias pd="play deps"
alias pdcs="play deps --clearcache --sync"
alias pat="play autotest"
alias ppgrep="ps aux | grep play | grep java"

############
# ruby
############
alias be='bundle exec'
function gem(){
    $HOME/.rbenv/shims/gem $*
    if [ "$1" = "install" ] || [ "$1" = "i" ] || [ "$1" = "uninstall" ] || [ "$1" = "uni" ]
    then
        rbenv rehash
        rehash
    fi
}

################
# scheme
################
alias gosh="rlwrap -b '(){}[],#\";| ' gosh"


###############
# variables
###############
export lxc=/var/lib/lxc

[ -f ~/.dotfiles/http-status-alias ] && source ~/.dotfiles/http-status-alias

###############
# java alias
###############
alias jh=/usr/libexec/java_home
grsh() {
    local specific_java_home=$1
    local current_jver=$(java -version 2>&1 | grep 'java version' | awk -F"\"" '{print $2}' || awk -F\. '{print $1.$2}')
    if [ -z "$specific_java_home" -a -x /usr/libexec/java_home ]; then
        specific_java_home=`/usr/libexec/java_home -v 1.7`
    fi
    echo "current_jver: $current_jver"
    echo "specific_java_home : $specific_java_home"
    JAVA_HOME=$specific_java_home groovysh
}


function grepRoute() {
    grep -n -v -e "^#\|^$" $1 | awk '{ printf("%-10s %-80s %-30s \n", $1, $2, $3) }' | less
}

alias cutn='cut -d" " -f '
function awkn() {
    awk '{print $'$1'}'
}
function psg() {
    ps aux | grep "$@" | grep -v grep
}
alias agpj='ag --ignore modules --java'

alias sbcll=' rlwrap -c -q=\" -b="(){}[].,;|" sbcl'
alias ccll='rlwrap -c -q=\" -b="(){}[].,;|" ccl' 

mvn-my-generate() {
    local usage=
    [ $# -lt 2 ] && echo  \
        "usage: \n  $ $0 <group id> <project name>" >&2 && return 1
    local group_id=$1
    local project_name=$2
    mvn archetype:generate \
        -DarchetypeArtifactId=maven-archetype-quickstart \
        -DinteractiveMode=false \
        -DgroupId=${group_id} \
        -DartifactId=${project_name}
}
